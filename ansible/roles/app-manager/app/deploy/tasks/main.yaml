####################################################
#  Role: app-manager/app/deploy                    #
#  Deploys apps                                    #
#                                                  #
#  Arguments:                                      #
#    - app_name: Name of the app to deploy         #
#    - web: If "open" enables access via nginx-waf #
####################################################
---

- debug:
    msg:
      - "Start app deployment process"
      - "App name: {{ app_name }}"

- name: Calculate app source path
  set_fact:
    app_src: "{{ playbook_dir }}/../deployments/{{ app_name }}"

# TODO: Check if app_src directory exists, stop if not
#
# TODO: Check if app is already deployed, stop if yes
#         - Pods
#         - Volumes
#         - Bind mounts
#         - Files in the OCI host
#
# TODO: Design data object based on previous TODOs.

- name: Parse kube file
  delegate_to: localhost
  kube_file_info:
    kube_file: "{{ app_src }}/kube-file.yaml"
  register: kube

- name: Call role app-manager/volume/create
  ansible.builtin.include_role:
    name: app-manager/volume/create
  vars:
    name: "{{ item.name }}"
  when: item.type == 'named'
  loop: "{{ kube.volumes }}"

- name: Call role app-manager/volume/copy
  ansible.builtin.include_role:
    name: app-manager/volume/copy
  vars:
    name: "{{ item.name }}"
    type: "{{ item.type }}"
    src: "{{ item.src }}"
    dst: "{{ item.dst }}"
  when: item.copy
  loop: "{{ kube.volumes }}"

- name: Call role app-manager/pod/create
  ansible.builtin.include_role:
    name: app-manager/pod/create
  vars:
    kube_file: "{{ app_src }}/kube-file.yaml"

- name: Call role app-manager/app/web/open
  ansible.builtin.include_role:
    name: app-manager/app/web/open
  vars:
    app_name: iml-fe
  when:
    - web is defined
    - web == "open"

